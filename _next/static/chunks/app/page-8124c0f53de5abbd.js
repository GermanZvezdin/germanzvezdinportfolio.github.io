(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{8628:(e,t,n)=>{Promise.resolve().then(n.bind(n,3474))},3474:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>z});var r=n(5155),a=n(2115),i=n(9660),s=n(4521),o=n(337);function l(){let e=(0,a.useRef)(null),t=(0,a.useMemo)(()=>({time:{value:0},resolution:{value:new o.I9Y(window.innerWidth,window.innerHeight)}}),[]);return(0,i.C)(n=>{e.current&&(t.time.value=n.clock.getElapsedTime())}),(0,a.useEffect)(()=>{let e=()=>{t.resolution.value.set(window.innerWidth,window.innerHeight)};return window.addEventListener("resize",e),()=>window.removeEventListener("resize",e)},[t.resolution]),(0,r.jsxs)("mesh",{ref:e,position:[0,0,0],children:[(0,r.jsx)("planeGeometry",{args:[10,10]}),(0,r.jsx)("shaderMaterial",{vertexShader:"\n  varying vec2 vUv;\n  void main() {\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n  }\n",fragmentShader:"\n  uniform float time;\n  uniform vec2 resolution;\n  varying vec2 vUv;\n  \n  // Random function\n  float random(vec2 st) {\n    return fract(sin(dot(st.xy, vec2(12.9898, 78.233))) * 43758.5453123);\n  }\n  \n  // 2D Noise\n  float noise(vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    \n    // Four corners in 2D of a tile\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    \n    // Smooth interpolation\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    \n    return mix(a, b, u.x) +\n            (c - a)* u.y * (1.0 - u.x) +\n            (d - b) * u.x * u.y;\n  }\n  \n  // Wave function\n  float wave(vec2 st, float freq, float amp, float speed) {\n    float x = st.x * freq + time * speed;\n    float y = st.y * freq + time * speed * 0.7;\n    return sin(x) * cos(y) * amp;\n  }\n  \n  vec3 palette(float t) {\n  \n  vec3 a = vec3(0.5, 0.2, 0.6);   \n  vec3 b = vec3(0.4, 0.3, 0.2);   // Subtle modulation\n  vec3 c = vec3(1.0, 0.8, 0.6);   // Bright warm tone (peachy \n  vec3 d = vec3(0.2, 0.6, 0.9); \n    \n    return a + b * cos(6.28318 * (c * t + d));\n  }\n  \n  void main() {\n    // Create a pixelated grid\n    float pixelSize = 12.0;\n    vec2 pixelCoord = floor(vUv * resolution / pixelSize) * pixelSize / resolution;\n    \n    // Create wave distortion\n    float wave1 = wave(pixelCoord, 5.0, 0.02, 0.3);\n    float wave2 = wave(pixelCoord, 10.0, 0.01, -0.5);\n    float wave3 = wave(pixelCoord, 3.0, 0.03, 0.2);\n    \n    // Combine waves\n    float waveDistortion = wave1 + wave2 + wave3;\n    \n    // Apply distortion to coordinates\n    vec2 distortedCoord = pixelCoord + vec2(waveDistortion, waveDistortion * 1.5);\n    \n    // Create noise pattern for color variation\n    float noiseValue = noise(distortedCoord * 3.0 + time * 0.1);\n    \n    // Create dynamic color based on position and time\n    float colorIndex = noiseValue * 0.3 + \n                      distortedCoord.x * 0.2 + \n                      distortedCoord.y * 0.3 + \n                      sin(time * 0.2) * 0.1;\n    \n    // Get color from palette\n    vec3 color = palette(colorIndex);\n    \n    // Add wave height influence to brightness\n    float waveBrightness = 0.7 + waveDistortion * 5.0;\n    color *= waveBrightness;\n    \n    // Add subtle vignette effect\n    float vignette = 1.0 - length(vUv - 0.5) * 0.5;\n    color *= vignette;\n    \n    // Add subtle scan lines\n    float scanLine = 0.95 + sin(vUv.y * resolution.y * 0.5 - time * 2.0) * 0.05;\n    color *= scanLine;\n    \n    // Add subtle pixel grid\n    float gridX = 0.95 + step(0.98, fract(vUv.x * resolution.x / pixelSize)) * 0.05;\n    float gridY = 0.95 + step(0.98, fract(vUv.y * resolution.y / pixelSize)) * 0.05;\n    color *= gridX * gridY;\n    \n    gl_FragColor = vec4(color, 1.0);\n  }\n",uniforms:t})]})}function d(){return(0,r.jsx)("div",{className:"fixed top-0 left-0 w-screen h-screen z-0",style:{position:"fixed",width:"100vw",height:"100vh"},children:(0,r.jsx)(s.Hl,{style:{width:"100%",height:"100%"},children:(0,r.jsx)(l,{})})})}function c(){return(0,r.jsxs)("header",{className:"text-center py-20 px-4",children:[(0,r.jsx)("h1",{className:"text-5xl font-bold mb-2 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-400 to-cyan-300",children:"German Zvezdin"}),(0,r.jsx)("p",{className:"text-xl mt-2 text-gray-300",children:"Programmer | C++ Render Engineer"})]})}var m=n(3463),f=n(9795);function u(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,f.QP)((0,m.$)(t))}let x=a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("rounded-lg border bg-card text-card-foreground shadow-sm",n),...a})});x.displayName="Card";let p=a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("flex flex-col space-y-1.5 p-6",n),...a})});p.displayName="CardHeader";let v=a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("text-2xl font-semibold leading-none tracking-tight",n),...a})});v.displayName="CardTitle",a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("text-sm text-muted-foreground",n),...a})}).displayName="CardDescription";let h=a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("p-6 pt-0",n),...a})});h.displayName="CardContent",a.forwardRef((e,t)=>{let{className:n,...a}=e;return(0,r.jsx)("div",{ref:t,className:u("flex items-center p-6 pt-0",n),...a})}).displayName="CardFooter";let g=[{id:"0TaF1j3ZLv4",description:"Designed and developed an advanced animation engine for AR graphics, enabling real-time visual effects and overlays for various sports. Worked on implementing physically-based lighting models, custom materials, shaders, and rendering optimizations to enhance visual fidelity and performance."},{id:"4b168ro3CNY",description:"Designed and developed an advanced animation engine for AR graphics, enabling real-time visual effects and overlays for various sports. Worked on implementing physically-based lighting models, custom materials, shaders, and rendering optimizations to enhance visual fidelity and performance."}];function w(){return(0,r.jsxs)("section",{className:"max-w-5xl mx-auto px-4 py-16",children:[(0,r.jsx)("h2",{className:"text-3xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-400 to-cyan-300",children:"Projects I've Worked On"}),(0,r.jsx)("div",{className:"space-y-16",children:g.map((e,t)=>(0,r.jsx)(x,{className:"bg-gray-900/60 border-gray-800 backdrop-blur-sm shadow-xl",children:(0,r.jsxs)(h,{className:"p-6",children:[(0,r.jsx)("div",{className:"aspect-video w-full overflow-hidden rounded-lg mb-6",children:(0,r.jsx)("iframe",{className:"w-full h-full",src:"https://www.youtube.com/embed/".concat(e.id),title:"YouTube video ".concat(t+1),allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowFullScreen:!0})}),(0,r.jsx)("p",{className:"text-gray-300 text-center max-w-3xl mx-auto",children:e.description})]})},t))})]})}let b=[{title:"3D Mandelbrot set ray marching",embedUrl:"https://www.shadertoy.com/embed/ftjXWh?gui=true&t=10&paused=true&muted=false",description:"A 3D visualization of the Mandelbrot set, computed using ray marching to achieve an infinite fractal effect."},{title:"Soap bubble shader ray marching",embedUrl:"https://www.shadertoy.com/embed/flffRs?gui=true&t=10&paused=true&muted=false",description:"This shader simulates the light reflections and distortions on a soap bubble using ray marching techniques."},{title:"Pseudo morphing",embedUrl:"https://www.shadertoy.com/embed/3dGfzw?gui=true&t=10&paused=true&muted=false",description:"This shader implements a ray marching technique to render 3D objects such as spheres and boxes, combined with smooth displacement and dynamic lighting effects"},{title:"University project",embedUrl:"https://www.shadertoy.com/embed/wsyfDR?gui=true&t=10&paused=true&muted=false",description:"This shader employs a physically-based lighting system combined with ray marching, volumetric fog, soft shadows, and reflections to achieve realistic rendering. Below is a breakdown of the different lighting models and effects used"}];function y(){return(0,r.jsxs)("section",{className:"max-w-5xl mx-auto px-4 py-16",children:[(0,r.jsx)("h2",{className:"text-3xl font-bold text-center mb-12 bg-clip-text text-transparent bg-gradient-to-r from-blue-400 via-purple-400 to-cyan-300",children:"Shader Projects"}),(0,r.jsx)("div",{className:"space-y-16",children:b.map((e,t)=>(0,r.jsxs)(x,{className:"bg-gray-900/60 border-gray-800 backdrop-blur-sm shadow-xl",children:[(0,r.jsx)(p,{children:(0,r.jsx)(v,{className:"text-xl text-center",children:e.title})}),(0,r.jsxs)(h,{className:"p-6",children:[(0,r.jsx)("div",{className:"aspect-video w-full overflow-hidden rounded-lg mb-6",children:(0,r.jsx)("iframe",{className:"w-full h-full",src:e.embedUrl,title:e.title,allowFullScreen:!0})}),(0,r.jsx)("p",{className:"text-gray-300 text-center max-w-3xl mx-auto",children:e.description})]})]},t))})]})}var j=n(1626),N=n(6462);function C(){return(0,r.jsx)("footer",{className:"py-12 mt-10 border-t border-gray-800 backdrop-blur-sm",children:(0,r.jsxs)("div",{className:"max-w-5xl mx-auto px-4 text-center",children:[(0,r.jsx)("p",{className:"mb-4",children:"\xa9 2025 German Zvezdin"}),(0,r.jsxs)("div",{className:"flex justify-center space-x-6",children:[(0,r.jsxs)("a",{href:"https://github.com/GermanZvezdin",className:"text-gray-400 hover:text-blue-400 transition-colors flex items-center gap-2",target:"_blank",rel:"noopener noreferrer",children:[(0,r.jsx)(j.A,{size:20}),(0,r.jsx)("span",{children:"GitHub"})]}),(0,r.jsxs)("a",{href:"mailto:german.zvezd@gmail.com",className:"text-gray-400 hover:text-blue-400 transition-colors flex items-center gap-2",children:[(0,r.jsx)(N.A,{size:20}),(0,r.jsx)("span",{children:"Email"})]})]})]})})}function z(){let[e,t]=(0,a.useState)(!1);return((0,a.useEffect)(()=>{t(!0)},[]),e)?(0,r.jsxs)("main",{className:"relative min-h-screen overflow-hidden text-white",children:[(0,r.jsx)(d,{}),(0,r.jsxs)("div",{className:"relative z-10",children:[(0,r.jsx)(c,{}),(0,r.jsx)(w,{}),(0,r.jsx)(y,{}),(0,r.jsx)(C,{})]})]}):null}}},e=>{var t=t=>e(e.s=t);e.O(0,[367,831,413,697,441,517,358],()=>t(8628)),_N_E=e.O()}]);